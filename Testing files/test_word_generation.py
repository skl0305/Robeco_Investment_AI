#!/usr/bin/env python3
"""
Test script for Robeco HTML-to-Word conversion system
Tests the complete pipeline from HTML input to Word document output
"""

import sys
import os
import asyncio
from pathlib import Path

# Add project root to Python path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root / "src"))

# Set working directory
os.chdir(str(project_root))

async def test_word_generation():
    """Test the complete HTML-to-Word conversion pipeline"""
    
    print("üß™ Testing Robeco HTML-to-Word Generation System")
    print("=" * 60)
    
    try:
        # Import the word report generator
        from robeco.backend.word_report_generator import word_report_generator
        print("‚úÖ Successfully imported Word report generator")
        
        # Sample HTML content (similar to what would be generated by the report system)
        sample_html = """
        <!DOCTYPE html>
        <html>
        <head>
            <title>Apple Inc. (AAPL) Investment Analysis</title>
        </head>
        <body>
            <div class="presentation-container">
                <div class="slide">
                    <div class="slide-header">
                        <h1 class="report-title">Apple Inc. Investment Analysis</h1>
                        <h2 class="report-subtitle">AAPL - Technology Sector Analysis</h2>
                    </div>
                    <div class="slide-content">
                        <div class="section-title">Executive Summary</div>
                        
                        <div class="metrics-grid">
                            <div class="metrics-item">
                                <div class="label">Market Cap</div>
                                <div class="value">$3.2T</div>
                            </div>
                            <div class="metrics-item">
                                <div class="label">P/E Ratio</div>
                                <div class="value">28.5</div>
                            </div>
                            <div class="metrics-item">
                                <div class="label">Revenue Growth</div>
                                <div class="value">8.2%</div>
                            </div>
                            <div class="metrics-item">
                                <div class="label">ROE</div>
                                <div class="value">147%</div>
                            </div>
                            <div class="metrics-item">
                                <div class="label">Debt/Equity</div>
                                <div class="value">1.73</div>
                            </div>
                        </div>
                        
                        <div class="analysis-item">
                            <div class="bold-black-header">Investment Recommendation</div>
                            <p>Apple Inc. (AAPL) demonstrates strong fundamentals with consistent revenue growth and exceptional return on equity. The company maintains a dominant position in the premium smartphone market while expanding its services ecosystem.</p>
                            <p>Key strengths include brand loyalty, innovative product pipeline, and robust cash generation. However, investors should monitor regulatory pressures and market saturation in key segments.</p>
                        </div>
                        
                        <div class="analysis-item">
                            <div class="bold-black-header">Financial Performance</div>
                            <p><strong>Revenue Growth:</strong> Apple reported 8.2% year-over-year revenue growth, driven by strong iPhone sales and expanding services segment.</p>
                            <p><strong>Profitability:</strong> Gross margins remain healthy at 46%, reflecting pricing power and operational efficiency.</p>
                            <p><strong>Balance Sheet:</strong> Strong cash position of $166B provides flexibility for capital allocation and strategic investments.</p>
                        </div>
                    </div>
                    <div class="report-footer">
                        <p>Robeco Investment Analysis Platform</p>
                        <p>Generated on December 2024</p>
                    </div>
                </div>
                
                <div class="slide">
                    <div class="slide-header">
                        <div class="section-title">Risk Assessment</div>
                    </div>
                    <div class="slide-content">
                        <div class="analysis-item">
                            <div class="bold-black-header">Key Risk Factors</div>
                            <p>1. <strong>Regulatory Risk:</strong> Increased scrutiny from antitrust authorities could impact App Store revenues and operational flexibility.</p>
                            <p>2. <strong>Market Saturation:</strong> Smartphone market maturity may pressure growth in core iPhone segment.</p>
                            <p>3. <strong>Supply Chain:</strong> Geopolitical tensions could affect manufacturing and component sourcing.</p>
                            <p>4. <strong>Competition:</strong> Intensifying competition in services and emerging technologies like AI and AR.</p>
                        </div>
                        
                        <table style="width:100%; border-collapse: collapse; margin-top: 20px;">
                            <tr>
                                <th style="border: 1px solid #005F90; padding: 8px; background: #f0f8ff;">Risk Category</th>
                                <th style="border: 1px solid #005F90; padding: 8px; background: #f0f8ff;">Impact</th>
                                <th style="border: 1px solid #005F90; padding: 8px; background: #f0f8ff;">Probability</th>
                            </tr>
                            <tr>
                                <td style="border: 1px solid #005F90; padding: 8px;">Regulatory</td>
                                <td style="border: 1px solid #005F90; padding: 8px;">High</td>
                                <td style="border: 1px solid #005F90; padding: 8px;">Medium</td>
                            </tr>
                            <tr>
                                <td style="border: 1px solid #005F90; padding: 8px;">Market Saturation</td>
                                <td style="border: 1px solid #005F90; padding: 8px;">Medium</td>
                                <td style="border: 1px solid #005F90; padding: 8px;">High</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </body>
        </html>
        """
        
        print("‚úÖ Sample HTML content prepared")
        print(f"   Content length: {len(sample_html):,} characters")
        
        # Test Word conversion
        print("\nüîÑ Converting HTML to Word document...")
        
        output_path = await word_report_generator.convert_html_to_word(
            html_content=sample_html,
            company_name="Apple Inc.",
            ticker="AAPL"
        )
        
        print(f"‚úÖ Word document generated successfully!")
        print(f"   Output file: {output_path}")
        
        # Check if file exists and get size
        if os.path.exists(output_path):
            file_size = os.path.getsize(output_path)
            print(f"   File size: {file_size:,} bytes")
            
            # Try to read the document to verify it's valid
            from docx import Document
            doc = Document(output_path)
            paragraph_count = len(doc.paragraphs)
            table_count = len(doc.tables)
            
            print(f"‚úÖ Document validation successful!")
            print(f"   Paragraphs: {paragraph_count}")
            print(f"   Tables: {table_count}")
            
            # Display some content samples
            if doc.paragraphs:
                first_para = doc.paragraphs[0].text.strip()
                if first_para:
                    print(f"   First paragraph: {first_para[:100]}...")
            
        else:
            print("‚ùå Output file not found!")
            return False
        
        print("\n" + "=" * 60)
        print("üéâ Word Generation Test Completed Successfully!")
        print("   The HTML-to-Word conversion pipeline is working correctly.")
        print(f"   Test file saved to: {output_path}")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå Import error: {e}")
        print("   Please ensure all dependencies are installed:")
        print("   pip install python-docx beautifulsoup4 lxml")
        return False
        
    except Exception as e:
        print(f"‚ùå Test failed with error: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    # Run the test
    result = asyncio.run(test_word_generation())
    
    if result:
        print("\n‚úÖ All tests passed! The Word generation system is ready to use.")
        sys.exit(0)
    else:
        print("\n‚ùå Tests failed! Please check the error messages above.")
        sys.exit(1)